// ========== APP CORE / ROUTER / ENHANCEMENTS ==========
// (DEV bundle) Pełny kod produkcyjny skopiowany z /assets/js/app.js
import { renderHome, renderServices, renderWork, renderTips, renderPricing, renderAbout, renderFAQ, renderContact } from './pages.js';

window.DEBUG = window.DEBUG ?? false;
const $ = sel => document.querySelector(sel);
const canvas = document.getElementById('matrix-bg');
if (canvas) {
	const ctx = canvas.getContext('2d');
	const chars = 'アァカサタナハマヤャラワ0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*';
	let fontSize = 14;
	const storedMatrixPref = localStorage.getItem('matrixEnabled');
	let running = true;
	function setup() {
		const dpr = window.devicePixelRatio || 1;
		canvas.width = window.innerWidth * dpr;
		canvas.height = window.innerHeight * dpr;
		canvas.style.width = window.innerWidth + 'px';
		canvas.style.height = window.innerHeight + 'px';
		ctx.setTransform(1,0,0,1,0,0);
		ctx.scale(dpr, dpr);
		fontSize = Math.max(12, Math.min(18, Math.round(window.innerWidth / 90)));
	}
	setup();
	const columns = () => Math.floor(window.innerWidth / fontSize);
	let drops = Array(columns()).fill(1);
	window.addEventListener('resize', () => { setup(); drops = Array(columns()).fill(1); });
	document.addEventListener('visibilitychange', () => { running = !document.hidden; if (running) requestAnimationFrame(draw); });
	function draw() {
		if (!running) return;
		ctx.fillStyle = 'rgba(10,10,10,0.08)';
		ctx.fillRect(0, 0, canvas.width, canvas.height);
		ctx.fillStyle = '#00FF88';
		ctx.font = fontSize + 'px monospace';
		for (let i = 0; i < drops.length; i++) {
			const text = chars[Math.floor(Math.random() * chars.length)];
			ctx.fillText(text, i * fontSize, drops[i] * fontSize);
			if (drops[i] * fontSize > window.innerHeight && Math.random() > 0.98) drops[i] = 0;
			drops[i]++;
		}
		requestAnimationFrame(draw);
	}
	const reduceMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
	if (storedMatrixPref !== '1' || reduceMotion) { running = false; canvas.style.display = 'none'; } else { requestAnimationFrame(draw); }
	window.__matrixControl = { enable(){ if (running) return; running = true; canvas.style.display=''; localStorage.setItem('matrixEnabled','1'); requestAnimationFrame(draw); }, disable(){ if (!running) return; running=false; canvas.style.display='none'; localStorage.setItem('matrixEnabled','0'); }, isEnabled(){ return running; } };
}
const app = document.getElementById('app');
const routes = { home: renderHome, uslugi: renderServices, realizacje: renderWork, porady: renderTips, cennik: renderPricing, 'o-nas': renderAbout, onas: renderAbout, faq: renderFAQ, kontakt: renderContact };
function navigate(hash) {
	const raw = (hash || '#home').replace('#', '');
	const key = raw === 'onas' ? 'o-nas' : (raw || 'home');
	const page = routes[key] || routes.home;
	showPreloader();
	setTimeout(() => {
		app.innerHTML = page();
		try { window.lucide?.createIcons?.(); } catch(_) {}
		hydratePage(key);
		setActiveNav(key);
		hidePreloader();
		window.scrollTo({ top: 0, behavior: 'smooth' });
	}, 500 + Math.random()*400);
}
let _parallaxBound = false;
function hydratePage(key){
	document.querySelectorAll('.fade-in, .slide-left, .slide-right').forEach(el => observer.observe(el));
	if (key === 'porady') loadTips();
	if (key === 'realizacje') { enableLightbox(); }
	if (key === 'cennik') { bindPriceFilter(); initStripeCardForm(); }
	if (key === 'kontakt') { bindContactForm(); }
	if (key === 'home') { startHeroScramble(); }
	if (!_parallaxBound) { window.addEventListener('scroll', parallaxEffect, { passive: true }); _parallaxBound = true; }
	document.querySelectorAll('button, a[href]').forEach(el => { if (el.dataset.hpulse) return; el.dataset.hpulse='1'; el.addEventListener('mouseenter', () => el.classList.add('hover-pulse')); el.addEventListener('mouseleave', () => el.classList.remove('hover-pulse')); });
	if (window.AOS && typeof AOS.refreshHard === 'function') AOS.refreshHard();
	initStripePayments();
}
let _parallaxScheduled = false;
function parallaxEffect() { if (_parallaxScheduled) return; _parallaxScheduled = true; requestAnimationFrame(()=>{ _parallaxScheduled = false; document.querySelectorAll('.parallax').forEach(el => { const speed = parseFloat(el.dataset.speed || '0.5'); const y = window.scrollY * speed; el.style.backgroundPositionY = `${y}px`; }); }); }
window.addEventListener('popstate', () => navigate(location.hash));
let __clickFx; function __initClickFx(){ const Ctx = window.AudioContext || window.webkitAudioContext; if (!Ctx) return ()=>{}; const ctx = new Ctx(); return function play(){ const now = ctx.currentTime; const o = ctx.createOscillator(); const g = ctx.createGain(); o.type='square'; o.frequency.setValueAtTime(820 + Math.random()*80, now); g.gain.setValueAtTime(0.18, now); g.gain.exponentialRampToValueAtTime(0.0001, now + 0.13); o.connect(g).connect(ctx.destination); o.start(now); o.stop(now + 0.14); }; }
function playClick(){ if (!__clickFx) __clickFx = __initClickFx(); __clickFx(); }
document.addEventListener('click', (e) => { const link = e.target.closest('[data-route]'); if (link) { playClick(); e.preventDefault(); history.pushState({}, '', link.getAttribute('href')); navigate(location.hash); document.getElementById('mobileMenu')?.classList.add('hidden'); }});
document.getElementById('openMenu')?.addEventListener('click', ()=>{ const menu = document.getElementById('mobileMenu'); menu.classList.toggle('hidden'); if (!menu.classList.contains('hidden')) { menu.style.opacity = 0; setTimeout(() => menu.style.opacity = 1, 50); }});
const loaderLines = [ 'Inicjalizuję moduł anty-kabel-w-plątaninie…','Skanuję BIOS w poszukiwaniu kawy ☕','Defragmentuję piksele w nagłówku…','Kompresuję nadmiarowe bajty entuzjazmu…','Uruchamiam nano-serwis do polerowania radiatorów…','Analizuję pakiety: 42% memów wykryto.','Optymalizuję flux strumienia bitów…','Wstrzykuję dodatkowe FPS-y…','Przepycham cache sprężonym powietrzem…','Szyfruję żarty admina base64…','Odpalam skrypt: sudo fix_everything.sh','Kalibruję czujnik dystansu od deadline’u…','Sprawdzam czy użytkownik to nie bot…','Uruchamiam moduł warp_drive.so','Wczytuję easter eggi…','Inicjalizacja: quantum-turbo-lambda…','Synchronizuję czas z zegarem atomowym w piwnicy…'];
function showPreloader(){ let el = document.getElementById('preloader'); if (!el) { document.body.insertAdjacentHTML('beforeend', `<div id="preloader" class="hidden"><div class="text-center px-8"><div class="mb-4 text-3xl font-display animate-pulse warp-heading">Przechodzę w WARP...</div><span class="text-sm opacity-80 font-mono"></span></div></div>`); el = document.getElementById('preloader'); } const span = el.querySelector('span'); if (span) span.textContent = loaderLines[Math.floor(Math.random()*loaderLines.length)]; el.classList.remove('hidden'); }
function hidePreloader(){ const el = document.getElementById('preloader'); if (el) el.classList.add('hidden'); }
const observer = new IntersectionObserver((entries)=>{ entries.forEach(e=>{ if (e.isIntersecting) e.target.classList.add('appear'); }); },{threshold:0.2});
async function loadTips(){ try { const grid = document.getElementById('tipsGrid'); const articlesGrid = document.getElementById('articlesGrid'); if (!grid) return; const pool = window.__TIPS_POOL || (window.__TIPS_POOL = [ ['Backup 3-2-1','3 kopie, 2 nośniki, 1 offsite. Testuj odtwarzanie!','Lista', ['Automatyzuj zadania','Szyfruj kopie offsite','Monitoruj logi backupu']],['Czyszczenie laptopa','Niższe temperatury = dłuższa żywotność.','Punkty', ['Sprężone powietrze','Wymiana pasty','Kontrola obrotów']],['Silne hasła i 2FA','Unikalne hasła + TOTP = podstawa.','Kroki', ['Menedżer haseł','Klucze FIDO2','Brak recyklingu haseł']],['Optymalizacja Windows','Wyłącz zbędny autostart.','Checklist', ['Sterowniki chipsetu','TRIM dla SSD','Aktualizacje krytyczne']],['Monitoring SMART','SMART ostrzega przed awarią.','Dbaj', ['CrystalDiskInfo','Temp <55°C','Backup przy warningach']],['Chłodzenie PC','Przepływ powietrza = stabilność.','Porady', ['Front intake','Rear/top exhaust','Porządek kabli']],['Sieć Wi-Fi 6E','Dobór kanału redukuje zakłócenia.','Punkty', ['Aktualny firmware','Wyłącz WPS','Osobny SSID gościnny']],['VPN WireGuard','Lekki i szybki protokół.','Sekcja', ['Aktualizuj klucze','Segmentuj sieć','Logi tylko diagnostyczne']],['Phishing','Sprawdzaj domeny i nadawcę.','Zasady', ['2FA wszędzie','Nie podawaj kodów','Menedżer haseł wykrywa fałszywki']],['Szyfrowanie dysków','BitLocker / VeraCrypt chroni dane.','Zalecenia', ['Zachowaj klucz offline','Szyfruj nośniki mobilne','Test odczytu po wdrożeniu']],['Segmentacja IoT','Izoluj urządzenia IoT.','Dlaczego', ['Oddzielny VLAN/SSID','Wyłącz UPnP','Aktualizuj firmware']],['Odzysk danych start','Minimalizuj zapisy na źródle.','Kroki', ['Zatrzymaj użycie','Obraz ddrescue','Pracuj na kopii']],['Bezpieczne kasowanie','SSD: Secure Erase / crypto erase.','Uwagi', ['Nie 35x nadpisywanie','1-3 przejścia HDD','Weryfikuj nośnik']],['Termopady / VRM','Dobre termopady = niższe temp.','Checklist', ['Mierz grubość','Nie zgniataj','Monitoruj temperatury']],['Logi systemowe','Wczesne wykrycie problemów.','Źródła', ['Event Viewer','journalctl','Alerty / SIEM']]]); const shuffled = [...pool].sort(()=>Math.random()-0.5).slice(0,12); grid.innerHTML = shuffled.map((t,i)=>`<details class="glass rounded-2xl p-6 fade-in" data-aos="fade-up" data-aos-delay="${i*40}"><summary class="cursor-pointer font-display font-bold text-lg">${t[0]}<span class="block text-xs text-slate-400 mt-1">${t[1]}</span></summary><div class="mt-3 text-sm text-slate-300">${t[2] ? `<p class="mb-2 font-medium text-accent/80">${t[2]}:</p>`:''}${Array.isArray(t[3]) ? `<ul class="list-disc list-inside space-y-1">${t[3].map(li=>`<li>${li}</li>`).join('')}</ul>`:''}</div></details>`).join(''); const first = grid.querySelector('details'); if (first) first.open = true; const spaceId = window.__CONTENTFUL_SPACE_ID || 'WSTAW_SPACE_ID'; const accessToken = window.__CONTENTFUL_CDA_TOKEN || 'WSTAW_ACCESS_TOKEN'; let articles = []; if (spaceId !== 'WSTAW_SPACE_ID' && accessToken !== 'WSTAW_ACCESS_TOKEN') { const cfRes = await fetch(`https://cdn.contentful.com/spaces/${spaceId}/entries?access_token=${accessToken}&content_type=article`); if (!cfRes.ok) throw new Error('Contentful HTTP '+cfRes.status); const cfData = await cfRes.json(); articles = cfData.items.map(it => ({ title: it.fields.title, excerpt: it.fields.excerpt, content: it.fields.content, url: it.fields.url || '#' })); } if (!articles.length) { const res = await fetch('/assets/data/articles.json'); const data = await res.json(); articles = data; } if (articlesGrid) { articlesGrid.innerHTML = articles.map(a=>`<article class="glass p-5 rounded-2xl fade-in hover:animate-pulse" data-aos="fade-up"><h3 class="font-display font-bold text-base mb-2 text-accent">${a.title}</h3><p class="text-xs text-slate-300 mb-3">${a.excerpt}</p><span class="read-more text-accent text-xs">Czytaj więcej →</span><div class="article-content text-xs text-slate-300">${a.content || ''}</div></article>`).join(''); articlesGrid.querySelectorAll('.read-more').forEach(btn=>{ btn.addEventListener('click', ()=>{ const c = btn.nextElementSibling; if (!c) return; c.classList.toggle('visible'); btn.textContent = c.classList.contains('visible') ? 'Zwiń ↑' : 'Czytaj więcej →'; }); }); } document.querySelectorAll('#tipsGrid .fade-in, #articlesGrid .fade-in').forEach(el => observer.observe(el)); if (window.AOS && typeof AOS.refresh === 'function') AOS.refresh(); } catch(e){ console.error('Błąd ładowania porad:', e); } }
function enableLightbox(){ const box = document.getElementById('lightbox'); const img = box.querySelector('img'); document.querySelectorAll('[data-full]').forEach(card => { card.addEventListener('click', () => { img.src = card.dataset.full; box.classList.add('open'); const focusable = box.querySelector('.close'); focusable?.focus(); }); }); box.addEventListener('click', (e)=>{ if (!e.target.closest('img')) box.classList.remove('open'); }); document.addEventListener('keydown', (e)=>{ if (e.key === 'Escape' && box.classList.contains('open')) { box.classList.remove('open'); } if (e.key === 'Tab' && box.classList.contains('open')) { const closeBtn = box.querySelector('.close'); if (closeBtn) { e.preventDefault(); closeBtn.focus(); } } }); }
function bindPriceFilter(){ const input = document.getElementById('priceFilter'); const rows = () => Array.from(document.querySelectorAll('#priceTable tbody tr')); if (!input) return; input.addEventListener('input', ()=>{ const q = input.value.toLowerCase(); rows().forEach(r => { const name = r.children[0].textContent.toLowerCase(); r.style.display = name.includes(q) ? '' : 'none'; }); }); }
function bindContactForm(){ const form = document.getElementById('contactForm'); if (!form) return; const toast = (msg, ok=true) => { const t = document.createElement('div'); t.className = `fixed bottom-6 left-1/2 -translate-x-1/2 px-5 py-3 rounded-xl ${ok ? 'bg-green-500/30 text-green-200' : 'bg-red-500/30 text-red-200'} border ${ok ? 'border-green-500/50' : 'border-red-500/50'} shadow-glow animate-fade-in`; t.textContent = msg; document.body.appendChild(t); setTimeout(()=>t.remove(), 3500); }; form.addEventListener('submit', async (e)=>{ e.preventDefault(); if (!form.checkValidity()) { toast('Sprawdź pola formularza!', false); return; } const fd = new FormData(form); if (fd.get('company')) return; try{ const res = await fetch(form.action, { method: 'POST', body: fd, headers: {'Accept':'application/json'} }); if (res.ok) { form.reset(); toast('Wysłane! Odpiszemy błyskawicznie.'); } else toast('Błąd serwera. Spróbuj później.', false); }catch(err){ toast('Problem z siecią. Spróbuj ponownie.', false); } }); }
const news = [ { text: 'Rekord: Odzysk 5TB po pożarze. Porada: Backup w chmurze!', href: '#' },{ text: 'Nowy poradnik: Wi-Fi 6E w domu – zero lagów.', href: '#porady' },{ text: 'Ekspresowa naprawa: Ekran w 30 min. Z gwarancją!', href: '#uslugi' },{ text: 'Cybersec tip: Używaj 2FA wszędzie.', href: '#' },{ text: 'Modernizacja PC: +50% FPS za 500 zł.', href: '#' }];
const newsBox = document.getElementById('news'); if (newsBox) { newsBox.innerHTML = news.map(n => `<a class="glass rounded-2xl p-5 hover:border-accent/60 fade-in block hover:animate-floaty" href="${n.href}">${n.text}</a>`).join(''); document.querySelectorAll('.fade-in').forEach(el => observer.observe(el)); }
function initPersonalization() { const savedTheme = localStorage.getItem('theme') || 'dark'; document.documentElement.dataset.theme = savedTheme; const userName = localStorage.getItem('userName'); if (userName) { document.querySelectorAll('.personal-greet').forEach(el => el.textContent = `Witaj, ${userName}!`); } }
function bindThemeToggle() { const btn = document.getElementById('themeToggle'); if (!btn || btn.dataset.bound) return; btn.dataset.bound='1'; btn.addEventListener('click', () => { const current = document.documentElement.dataset.theme || 'dark'; const next = current === 'dark' ? 'light' : 'dark'; document.documentElement.dataset.theme = next; localStorage.setItem('theme', next); }); }
function initTheme() { if (!localStorage.getItem('theme')) { document.documentElement.dataset.theme = 'dark'; localStorage.setItem('theme', 'dark'); } else { document.documentElement.dataset.theme = localStorage.getItem('theme'); } }
function showToast(msg, ok = true) { const t = document.createElement('div'); t.className = `fixed bottom-6 left-1/2 -translate-x-1/2 px-5 py-3 rounded-xl z-[9999] ${ ok ? 'bg-green-500/30 text-green-200 border-green-500/50' : 'bg-red-500/30 text-red-200 border-red-500/50' } border shadow-glow text-sm font-display backdrop-blur`; t.textContent = msg; document.body.appendChild(t); setTimeout(()=> t.remove(), 3500); }
let __stripeInstance = null; function initStripePayments(){ if (!window.Stripe) return; if (!__stripeInstance){ const pubKey = window.__STRIPE_PUBLISHABLE_KEY || 'pk_test_WSTAW_SWOJ_PUBLISHABLE_KEY'; try { __stripeInstance = Stripe(pubKey); } catch(err){ return; } } document.querySelectorAll('[data-checkout-plan]').forEach(btn=>{ if (btn.dataset.stripeBound) return; btn.dataset.stripeBound='1'; btn.addEventListener('click', async ()=>{ const plan = btn.getAttribute('data-checkout-plan'); showToast('Przygotowuję płatność...', true); try{ const res = await fetch('/api/create-checkout-session', { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ plan }) }); if(!res.ok) throw new Error('HTTP '+res.status); const { id } = await res.json(); if(!id) throw new Error('Brak ID sesji'); const { error } = await __stripeInstance.redirectToCheckout({ sessionId: id }); if (error) throw error; }catch(e){ showToast('Błąd płatności: '+ e.message, false); } }); }); }
let __stripeCardMounted = false; function initStripeCardForm(){ if (!window.Stripe) return; const form = document.getElementById('payment-form'); const mountPoint = document.getElementById('card-element'); if (!form || !mountPoint || __stripeCardMounted) return; const stripe = Stripe(window.__STRIPE_PUBLISHABLE_KEY || 'pk_test_WSTAW_SWOJ_PUBLISHABLE_KEY'); const elements = stripe.elements(); const card = elements.create('card', { hidePostalCode: true }); card.mount('#card-element'); __stripeCardMounted = true; form.addEventListener('submit', async e=>{ e.preventDefault(); showToast('Przetwarzam płatność...', true); const { paymentMethod, error } = await stripe.createPaymentMethod({ type:'card', card }); if (error) { showToast('Błąd karty: '+error.message, false); return; } try { const r = await fetch('/api/process-payment', { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ paymentMethodId: paymentMethod.id }) }); if(!r.ok) throw new Error('Serwer: '+r.status); showToast('Płatność przyjęta – dziękujemy!', true); form.reset(); } catch(err){ showToast('Błąd serwera: '+err.message, false); } }); }
// Web Vitals init (DEV) – uproszczone; zewnętrzny ESM usunięty, korzystamy tylko jeśli kiedyś dodamy lokalny bundlowany build
function initWebVitals() { if (window.__vitalsInited) return; window.__vitalsInited = true; const wire = ({ name, value }) => { console.log('[WebVitals]', name, value); }; function bindAPI(api){ api.getCLS?.(wire); api.getFID?.(wire); api.getLCP?.(wire); api.getINP?.(wire); api.getTTFB?.(wire); } if (window.webVitals) { bindAPI(window.webVitals); } else { if(window.DEBUG) console.log('[WebVitals][DEV] using fallback (web-vitals-fallback.js)'); } }
function postInitialEnhancements() { initPersonalization(); bindThemeToggle(); initStripePayments(); if (window.AOS && !window.__aosInited) { window.AOS.init({ duration: 800, once: true, offset: 80, easing: 'ease-out-cubic' }); window.__aosInited = true; } const skip = document.getElementById('skipLink'); if (skip) { skip.addEventListener('click', (e)=>{ e.preventDefault(); const main = document.getElementById('app'); if (main) { main.setAttribute('tabindex','-1'); main.focus({preventScroll:false}); } }); } initWebVitals(); const themeChk = document.getElementById('toggleTheme'); if (themeChk) themeChk.checked = (document.documentElement.dataset.theme || 'dark') === 'dark'; }
const settingsBtn = document.getElementById('settingsBtn'); const settingsMenu = document.getElementById('settingsMenu'); if (settingsBtn && settingsMenu && !settingsBtn.dataset.bound) { settingsBtn.dataset.bound='1'; settingsBtn.addEventListener('click', () => settingsMenu.classList.toggle('hidden')); }
const matrixCanvas = document.getElementById('matrix-bg'); const toggleMatrixEl = document.getElementById('toggleMatrix'); if (toggleMatrixEl && !toggleMatrixEl.dataset.bound) { toggleMatrixEl.dataset.bound='1'; if (localStorage.getItem('matrixEnabled') !== '1') toggleMatrixEl.checked = false; toggleMatrixEl.addEventListener('change', e => { const checked = e.target.checked; localStorage.setItem('matrixEnabled', checked ? '1' : '0'); if (window.__matrixControl) { checked ? window.__matrixControl.enable() : window.__matrixControl.disable(); } else if (matrixCanvas) { matrixCanvas.style.display = checked ? '' : 'none'; } }); }
function bootAnimation(){ return new Promise(res=>{ if (sessionStorage.getItem('bootShown')) return res(); sessionStorage.setItem('bootShown','1'); const wrap = document.createElement('div'); wrap.id = 'bootScreen'; wrap.innerHTML = `<div class="boot-inner" aria-label="Ładowanie systemu"><pre class="boot-log" id="bootLog"></pre></div>`; document.body.appendChild(wrap); const lines = ['[ INIT ] Inicjalizacja modułów...','[ LOAD ] Sieć ⇢ OK','[ CHECK] Bezpieczeństwo ⇢ OK','[ GPU  ] Akceleracja efektów...','[ READY] System Tech-Majster uruchomiony']; const colors = ['clr-a','clr-b','clr-c','clr-d']; const logEl = document.getElementById('bootLog'); let i=0; const tick = ()=>{ if (i < lines.length){ const span = document.createElement('span'); span.className = colors[i % colors.length]; span.textContent = lines[i]; logEl.appendChild(span); logEl.appendChild(document.createTextNode('\n')); i++; setTimeout(tick, 90 + i*40); } else { setTimeout(()=>{ wrap.classList.add('boot-done'); setTimeout(()=>wrap.remove(), 250); res(); }, 250); } }; tick(); }); }
function setActiveNav(active){ document.querySelectorAll('.nav-link').forEach(a=>{ const href = a.getAttribute('href')||''; const r = href.replace('#','') || 'home'; const match = r === active; a.classList.toggle('active', match); if (match) a.setAttribute('aria-current','page'); else a.removeAttribute('aria-current'); }); }
// uproszczony DEV bundle
const SCRAMBLE_CHARS = '█▓▒░#@%&/?+=<>_|{}[]()*$€01OILSEAxyzqwe!^~';
function startHeroScramble(){ const el = document.getElementById('heroScramble'); if (!el || el.dataset.scrambled) return; el.dataset.scrambled='1'; const target = el.getAttribute('data-text') || el.textContent.trim(); const iterations = 18; const letters = target.split(''); const reveal = new Array(letters.length).fill(false); let frame = 0; function tick(){ let output=''; for (let i=0;i<letters.length;i++){ if (reveal[i]) { output += letters[i]; continue; } if (frame > iterations + i*2) { reveal[i] = true; output += letters[i]; continue; } output += SCRAMBLE_CHARS[Math.floor(Math.random()*SCRAMBLE_CHARS.length)]; } el.textContent = output; frame++; if (reveal.every(Boolean)) { el.textContent = target; return; } requestAnimationFrame(tick); } setTimeout(()=>requestAnimationFrame(tick), 120); }
initTheme();
bootAnimation().then(()=>{ navigate(location.hash); if ('serviceWorker' in navigator) { navigator.serviceWorker.register('/assets/js/sw.js').catch(()=>{}); } postInitialEnhancements(); });
